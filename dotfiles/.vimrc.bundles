if &compatible
  set nocompatible
end

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" The Basics
Plug 'christoomey/vim-run-interactive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'pbrisbin/vim-mkdir'
Plug 'w0rp/ale'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/tComment'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'tweekmonster/startuptime.vim'
Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': 'bash install.sh',
    \ }
Plug 'vimwiki/vimwiki'
Plug 'yuttie/comfortable-motion.vim'
" (Optional) Multi-entry selection UI.
Plug 'junegunn/fzf'
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Scheme toys
Plug 'Olical/vim-scheme', { 'for': 'scheme', 'on': 'SchemeConnect' }
Plug 'guns/vim-sexp'
Plug 'tpope/vim-sexp-mappings-for-regular-people'

" The Color
Plug 'mhartington/oceanic-next'
Plug 'chriskempson/tomorrow-theme'

" The JS
Plug 'prettier/vim-prettier', {
  \ 'do': 'yarn install',
  \ 'for': ['javascript', 'json', 'graphql', 'markdown'] }

" The Ocaml
Plug 'reasonml-editor/vim-reason-plus'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

" The Rust
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'

" The Purescript
Plug 'purescript-contrib/purescript-vim'

call plug#end()
